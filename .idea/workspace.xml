<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="14b7fb34-0a0f-433e-9d2d-ecd09430e637" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/Project.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/.idea/codeStyles/codeStyleConfig.xml" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/pnpm-workspace.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.github/workflows/build-page.yaml" beforeDir="false" afterPath="$PROJECT_DIR$/.github/workflows/build-page.yaml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/bun.lockb" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/package.json" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/.dockerignore" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/.eslintignore" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/.eslintignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/.eslintrc.cjs" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/.eslintrc.cjs" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/.gitignore" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/.gitignore" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/.prettierrc" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/.prettierrc" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/Dockerfile" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/README.md" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/README.md" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/build.gradle.kts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/playwright.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/playwright.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/postcss.config.cjs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/app.d.ts" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/src/app.d.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/app.html" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/src/app.html" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/app.pcss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/components/DropzoneComponent.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/components/UserSelectorDisplay.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/hooks.server.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/RFC9457.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/consts.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/expressions.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/gateway.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/request_types.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/schemas.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/selectos.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/socket_utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/sse.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/lib/utils.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/params/integer.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/params/user.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/+error.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/+layout.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/+layout.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/+layout.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/+layout.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/+layout.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/+page.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/[post]/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/@[user]/[post]/+page.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/AppSkeleton.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/NotificationBell.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/ProfileDropdown.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/Sidebar.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/TopNavSearchBar.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/TopNavbar.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/+layout.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/+layout.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/+page.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/GuildSkeleton.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/[channel]/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/g/[guild]/[channel]/+page.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/new/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/settings/+layout.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/settings/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/[[lang]]/settings/notifications/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/index.html/+page.svelte" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/routes/index.html/+page.ts" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/src/styles/import-fontawesome.scss" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/svelte.config.js" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/svelte.config.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/tailwind.config.cjs" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/tsconfig.json" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/tsconfig.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/frontend/vite.config.ts" beforeDir="false" afterPath="$PROJECT_DIR$/services/frontend/vite.config.ts" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/yarn.lock" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;Phyrone&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/Phyrone/project-kiwi.git&quot;,
    &quot;accountId&quot;: &quot;c6061796-4341-41ae-8560-02937b366a57&quot;
  }
}</component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="r8bk84ux" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;customColor&quot;: &quot;&quot;,
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2g81x4EcIFzsq7sgT5iDDtkH19A" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
    &quot;nodejs_package_manager_path&quot;: &quot;yarn&quot;,
    &quot;org.rust.cargo.project.model.PROJECT_DISCOVERY&quot;: &quot;true&quot;,
    &quot;org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon&quot;: &quot;&quot;,
    &quot;org.rust.first.attach.projects&quot;: &quot;true&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.fileTypes&quot;,
    &quot;ts.external.directory.path&quot;: &quot;yarn:page/package.json:typescript&quot;,
    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/shared/web/src" />
      <recent name="$PROJECT_DIR$/shared/proto/src" />
      <recent name="$PROJECT_DIR$/shared/database/src" />
    </key>
  </component>
  <component name="RsExternalLinterProjectSettings">
    <option name="runOnTheFly" value="true" />
  </component>
  <component name="RunManager" selected="Cargo.Run project-kiwi">
    <configuration name="Run gateway" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package gateway --bin gateway" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run media" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package media --bin media" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run migration" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package migration --bin migration" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run new_core" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package new_core --bin new_core" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run project-kiwi" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package project-kiwi --bin project-kiwi" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run relay" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package relay --bin relay" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run snowflake" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package snowflake --bin snowflake" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Run worker" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="run --package worker --bin worker" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
    <configuration name="Test project-kiwi" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test --workspace" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
        <option name="com.soywiz.korge.intellij.UpdateResourceBeforeRunTask" enabled="false" />
      </method>
    </configuration>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SharedIndexes">
    <attachedChunks>
      <set>
        <option value="bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.15989.150" />
        <option value="bundled-js-predefined-1d06a55b98c1-91d5c284f522-JavaScript-IU-241.15989.150" />
      </set>
    </attachedChunks>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="14b7fb34-0a0f-433e-9d2d-ecd09430e637" name="Changes" comment="" />
      <created>1715064635596</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1715064635596</updated>
      <workItem from="1715064638227" duration="6030000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="WfRunsListSearchHistory">{
  &quot;history&quot;: [
    {
      &quot;branch&quot;: &quot;main&quot;,
      &quot;currentBranchFilter&quot;: true
    }
  ],
  &quot;lastFilter&quot;: {
    &quot;branch&quot;: &quot;main&quot;,
    &quot;currentBranchFilter&quot;: true
  }
}</component>
</project>